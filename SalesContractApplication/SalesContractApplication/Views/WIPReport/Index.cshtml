@model SalesContractApplication.Models.WIPReportViewModel
<link href="~/css/wip.css" rel="stylesheet" />
<link href="~/css/bootstrap-icons.css" rel="stylesheet" />
@{
    ViewBag.Title = "WIP Report";
}
<div class="container-fluid">
    <div class="row vh-90  justify-content-end bg-white">
        <!-- Sticky Search Column -->
        <div class="col-2 offset-8 my-2 mx-1 position-sticky top-0  shadow-sm">
            <div class="input-group">
                <input class="form-control"
                       type="text"
                       placeholder="Type to search..."
                       id="searchBox">
                <button class="btn btn-white border-start-0 border"
                        type="button">
                    <i class="bi bi-search"></i>
                </button>
            </div>
        </div>

        <!-- Scrollable Table -->
        <div class="col-12 overflow-auto" style="max-height: 80vh;">
            <table id="myTable" class="table table-bordered scrollable-table">
                <thead>
                    <tr>
                        <th rowspan="2" class="frezze-column" data-column="0" data-filter="customer_group">
                            Group<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="customer_group">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th rowspan="2" class="frezze-column" data-column="1" data-filter="customer_code">
                            Customer<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="customer_code">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th rowspan="2" data-column="2" data-filter="order_type">
                            Order Type<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="order_type">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th rowspan="2" data-column="3" data-filter="customer_order_number">
                            Cust Order<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="customer_order_number">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th rowspan="2" data-column="4" data-filter="order_id">
                            Order ID<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="order_id">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th rowspan="2" data-column="5" data-filter="lop">
                            LOP<span class="sort-indicator"></span>
                            <select class="filter form-select" data-filter="lop">
                                <option value="ALL">All</option>
                            </select>
                        </th>
                        <th colspan="15">Production Steps</th>
                        <th rowspan="2" data-column="21" data-filter="total"> Total<span class="sort-indicator"></span></th>
                    </tr>
                    <tr>
                        <th data-column="6" data-filter="packing">Packing</th>
                        <th data-column="7" data-filter="non_moving">Non <br>Moving</th>
                        <th data-column="8" data-filter="repairing">Repairing</th>
                        <th data-column="9" data-filter="finishing">Finishing</th>
                        <th data-column="10" data-filter="pre_finishing">Pre <br>Finishing</th>
                        <th data-column="11" data-filter="setting">Setting</th>
                        <th data-column="12" data-filter="missing_component">Missing<br> Component</th>
                        <th data-column="13" data-filter="stones">Stones</th>
                        <th data-column="14" data-filter="past_preparation">Post<br> Preparation</th>
                        <th data-column="15" data-filter="preparation">Preparation</th>
                        <th data-column="16" data-filter="casting">Casting</th>
                        <th data-column="17" data-filter="wax">Wax</th>
                        <th data-column="18" data-filter="wax_setting">Wax<br> Setting</th>
                        <th data-column="19" data-filter="planing">Planning</th>
                        <th data-column="20" data-filter="others">Others</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Table rows go here -->
                </tbody>
            </table>
        </div>
    </div>
</div>
<!-- Modal -->
<div class="modal fade" id="cellDetailsModal" tabindex="-1" aria-labelledby="cellDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-fullscreen">
        <!-- Enlarged modal -->
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="cellDetailsModalLabel">Details Table</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Dynamic content will go here -->
                <table id="popupTable" class="table table-bordered">
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script src="~/js/common.js"></script>

@section Scripts {
    <script type="text/javascript">
        let arr = new Array();
        let currentSortColumn = null; 
        let sortOrder = 'asc';         
     
        function getData() {

            $.ajax({
                url: '@Url.Action("GetWipReport", "WIPReport")',
                type: 'GET',
                async: false,
                success: function (result) {
                    if (result.success) {
                        arr = JSON.parse(result.data);
                        drawTable(arr);
                        populateFilters();
                    } else {
                        showToast('error', 'Can Not find Wip Report data : ' + data.Error);
                    }
                },
                error: function (xhr, status, error) {
                    console.log("xhr : " + xhr)
                    console.log("status : " + status)
                    console.log("error : " + error)
                    alert("Error: " + error);
                }
            }).done(function (result) {
            });
        }
  
        function handelDetailQtyClick() {
            $('#myTable tbody').on('click', 'td a', function () { 
                const $cell = $(this); // The clicked cell
                const $row = $cell.closest('tr'); // The clicked cell's row
                const rowData = [];
                $row.children('td, th').each(function (index) {
                    const colSpan = $(this).attr('colspan') || 1; // Get colspan (default 1)
                    const rowSpan = $(this).attr('rowspan') || 1; // Get rowspan (default 1)
                    for (let i = 0; i < colSpan; i++) {
                        rowData.push($(this).clone().find('span').remove().end().text().trim());
                    }
                });
                const columnKey = $(this).data('filter');
                let group = rowData[0];
                let customer = rowData[1];
                let orderType = rowData[2];
                let custOrder = rowData[3];
                let orderID = rowData[4];
                let LOP = rowData[5];
                $('#cellDetailsModal .modal-body').html('<table id="popupTable" data-pagination="true"   data-page-list="[10, 25, 50, 100, all]"  data-page-size="10"  data-search="true"  data-buttons-class="btn btn-info" data-show-export = "true" class= "table table-bordered" ></table > ');
                var $table = $("#popupTable");
                $.ajax({
                    url: '@Url.Action("GetWipReport_detail", "WIPReport")',
                    type: 'POST',
                    data: {
                        group: group,
                        customer: customer,
                        orderType: orderType,
                        custOrder: custOrder,
                        orderID: orderID,
                        LOP: LOP,
                        currentStep: columnKey
                    },
                    //async: false,
                    beforeSend: function () {
                        $('#splash_screen').removeClass('hidden'); // Show loading screen
                    },
                    complete: function () {
                       $('#splash_screen').addClass('hidden');
                    }  ,
                    success: function (result) {
                        if (result.success) {
                            var jsonArray = JSON.parse(result.data);
                            var rearrangedHeaders = ['No.','CustName', 'BagNumber', 'LOP', 'Reference', 'Name', 'Gamme', 'DrawingNumber', 'Brand', 'Quantity', 'ItemType', 'Size', 'CustOrder', 'OrderID', 'OrderType', 'OrderIDLine', 'OrderDate', 'ProStep', 'StepIndex', 'Remark', 'TechnicalGroup', 'FinishWeek', 'WeekRequest', 'OrderWeek',  'LastJobDate'];  // Specify the desired order
                            
                            var $thead = $("<thead></thead>");
                            var $theadRow = $("<tr></tr>");
                            rearrangedHeaders.forEach(function (header) {
                                $theadRow.append($("<th></th>").text(header));
                            });
                            $thead.append($theadRow);
                            $table.append($thead);
                            var $tbody = $("<tbody></tbody>");
                            jsonArray.forEach(function (row) {
                                var $row = $("<tr></tr>");
                                rearrangedHeaders.forEach(function (header) {
                                    $row.append($("<td></td>").text(row[header]));
                                });
                                $tbody.append($row);
                            });
                            $table.append($tbody);
                            $table.bootstrapTable();
                            const cellValue = $cell.clone().find('span').remove().end().text().trim();
                            $('#cellDetailsModalLabel').html(` <strong>Customer:</strong> ${customer}<br/> 
                            <strong>Customer Order Number:</strong> ${custOrder}<br/> 
                            <strong>Current Step:</strong> ${columnKey} ( ${cellValue} pcs) `);
                            $('#cellDetailsModal').modal('show');
                        } else {
                            showToast('error', 'Can Not find Wip Report data : ' + result.error);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.log("xhr : " + xhr)
                        console.log("status : " + status)
                        console.log("error : " + error)
                        alert("Error: " + error);
                    }
                }).done(function (result) {
                });
            });
        }


        $(document).ready(function () {
            getData();
            $(".filter").select2({
                theme: "bootstrap-5",
            });
            $('#searchBox').on('input', function () {
                const searchValue = $(this).val().toLowerCase();
                const filteredData = arr.filter(item => {
                    return Object.values(item).some(val =>
                        String(val).toLowerCase().includes(searchValue)
                    );
                });
                drawTable(filteredData, searchValue);
            });
            handelToggleIconClick();
            handelFilter();
            handleHeaderClick();
            handelDetailQtyClick();

        });
    </script>
}